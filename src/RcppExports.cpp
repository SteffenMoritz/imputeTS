// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// locf
Rcpp::NumericVector locf(NumericVector x, bool reverse);
RcppExport SEXP _imputeTS_locf(SEXP xSEXP, SEXP reverseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< bool >::type reverse(reverseSEXP);
    rcpp_result_gen = Rcpp::wrap(locf(x, reverse));
    return rcpp_result_gen;
END_RCPP
}
// ma
Rcpp::NumericVector ma(NumericVector x, int k, String weighting);
RcppExport SEXP _imputeTS_ma(SEXP xSEXP, SEXP kSEXP, SEXP weightingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< String >::type weighting(weightingSEXP);
    rcpp_result_gen = Rcpp::wrap(ma(x, k, weighting));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_imputeTS_locf", (DL_FUNC) &_imputeTS_locf, 2},
    {"_imputeTS_ma", (DL_FUNC) &_imputeTS_ma, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_imputeTS(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
